{"mappings":"oeAgBA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,EAASC,YAAW,KACdP,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAbES,SAASC,cAAc,SAC/BC,iBAAiB,UAiBxB,SAAyBC,GACvBA,EAAEC,iBACFC,aAAaP,GAEb,IAAIQ,EAAaC,OAAOP,SAASC,cAAc,kBAAkBO,OAC7DC,EAAYF,OAAOP,SAASC,cAAc,iBAAiBO,OAC3DE,EAAcH,OAAOP,SAASC,cAAc,mBAAmBO,OAMnE,GAJAG,QAAQC,IAAI,SAAUN,GACtBK,QAAQC,IAAI,QAASH,GACrBE,QAAQC,IAAI,UAAWF,GAEnBJ,EAAa,GAAKG,EAAY,GAAKC,EAAc,EAEnD,YADAvB,EAAA0B,OAAOC,QAAQ,wCAGjB,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAaK,GAAK,EACrC1B,EAAc0B,EAAGT,GACdU,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBoB,QAAQC,IAAI,C,SAAEtB,E,MAAUC,IACxBJ,EAAA0B,OAAOI,QAAQ,wBAAsB3B,QAAiBC,MAAU,IAEjE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBoB,QAAQC,IAAI,C,SAAEtB,E,MAAUC,IACxBJ,EAAA0B,OAAOC,QAAQ,uBAAqBxB,QAAeC,MAAU,IAGjEe,GAAcG,EAEhBN,EAAEgB,cAAcC,O,IA9BlB,IAAItB,EAAS","sources":["src/js/03-promises.js"],"sourcesContent":["/* <form class=\"form\">\n  <label>\n    First delay (ms)\n    <input type=\"number\" name=\"delay\" required />\n  </label>\n  <label>\n    Delay step (ms)\n    <input type=\"number\" name=\"step\" required />\n  </label>\n  <label>\n    Amount\n    <input type=\"number\" name=\"amount\" required />\n  </label>\n  <button type=\"submit\">Create promises</button>\n</form>; */\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onCreatePromise);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    timeId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nlet timeId = null;\nfunction onCreatePromise(e) {\n  e.preventDefault();\n  clearTimeout(timeId);\n\n  let delayValue = Number(document.querySelector('[name=\"delay\"]').value);\n  let stepValue = Number(document.querySelector('[name=\"step\"]').value);\n  let amountValue = Number(document.querySelector('[name=\"amount\"]').value);\n\n  console.log('delay:', delayValue);\n  console.log('step:', stepValue);\n  console.log('amount:', amountValue);\n\n  if (delayValue < 1 || stepValue < 1 || amountValue < 1) {\n    Notify.failure(`All values must be greater than zero`);\n    return;\n  }\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        console.log({ position, delay });\n        Notify.success(`✅ Fulfilled promise #${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log({ position, delay });\n        Notify.failure(`❌ Rejected promise #${position} in ${delay}ms`);\n      });\n\n    delayValue += stepValue;\n  }\n  e.currentTarget.reset();\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$timeId","setTimeout","document","querySelector","addEventListener","e","preventDefault","clearTimeout","delayValue","Number","value","stepValue","amountValue","console","log","Notify","failure","i","then","success","catch","currentTarget","reset"],"version":3,"file":"03-promises.1c3ad4a6.js.map"}